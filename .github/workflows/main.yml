name: Build and Release Electron App

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16' # 使用するNode.jsのバージョン

      - name: Install dependencies
        run: npm install

      - name: Build Electron app
        run: npm run build

      - name: Package Electron app
        run: npm run package -- --platform ${{ matrix.os }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-build
          path: |
            dist/
            release/

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: macos-latest-build
          path: macos-build

      - uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-build
          path: ubuntu-build

      - uses: actions/download-artifact@v2
        with:
          name: windows-latest-build
          path: windows-build

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-build/path_to_your_macos_app.zip
          asset_name: your_macos_app.zip
          asset_content_type: application/zip

      - name: Upload Release Asset (Ubuntu)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ubuntu-build/path_to_your_ubuntu_app.zip
          asset_name: your_ubuntu_app.zip
          asset_content_type: application/zip

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-build/path_to_your_windows_app.zip
          asset_name: your_windows_app.zip
          asset_content_type: application/zip
